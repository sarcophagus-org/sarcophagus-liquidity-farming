{"version":3,"sources":["web3/chains.js","web3/useProvider.js","web3/index.js","web3/useListeners.js","dataContext/index.js","dataContext/contracts.js","dataContext/totalRewards.js","dataContext/totalStakes.js","dataContext/blocks.js","dataContext/myStakes.js","dataContext/myRewards.js","dataContext/myBalances.js","dataContext/abilities.js","assets/images/logo.png","assets/images/wallet.svg","components/Header.js","assets/images/question.svg","components/shared/Tooltip.js","components/shared/Value.js","components/Blocks.js","components/GlobalStats.js","dataContext/transactions.js","components/shared/Button.js","assets/images/usdc.svg","assets/images/lock.svg","components/StakeForm.js","components/Claim.js","assets/images/unlock.svg","components/Unlock.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["supportedChains","parseInt","process","context","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","theme","defaultName","defaultWeb3","name","account","chainId","provider","signerOrProvider","makeInjectedProvider","web3Provider","selectedAddress","getSigner","useProvider","useState","setWeb3Provider","reloadedProvider","myProvider","setMyProvider","useEffect","on","includes","ethers","providers","Web3Provider","toast","dark","toastId","clearCachedProvider","off","window","location","reload","accounts","length","removeAllListeners","useListeners","cachedProvider","Promise","resolve","reject","connect","then","userSuppliedProvider","catch","console","error","providerKeys","defaultProvider","getDefaultProvider","network","getFallbackProvider","a","createContext","displayName","Provider","children","value","createWeb3Root","useWeb3","useContext","useLiquidityFarmingContract","addresses","setAddresses","liquidityFarming","useAddresses","liquidityFarmingContract","setLiquidityFarmingContract","Contract","LiquidityFarming","abi","useDecimals","contract","decimals","setDecimals","DataProvider","moneyString","bigNumber","money","numeral","utils","formatUnits","makeNumeral","format","Array","fill","join","makeDecimals","counterString","seconds","Number","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","replace","dateString","Date","toLocaleString","StateEnum","Object","freeze","NotScheduled","Scheduled","Ready","Active","Over","sarcoContract","setSarcoContract","sarco","ERC20","useSarcoContract","lpTokenContract","lpToken","setLPToken","lp","useLPTokenContract","decimalsSarco","decimalsLP","totalRewards","BigNumber","from","totalSarcoRewards","setTotalSarcoRewards","updateTotalRewards","removeListener","useTotalRewards","totalClaimedRewards","totalClaimedSarcoRewards","setTotalClaimedSarcoRewards","getClaimedRewards","_","_sarco","add","useTotalClaimedRewards","totalStakeLP","setTotalStakeLP","totalStakeLp","addLP","_lp","removeLP","sub","useTotalStakeLP","currentBlock","setCurrentBlock","getBlockNumber","blockNumber","useCurrentBlock","currentTime","now","setCurrentTime","getBlock","block","timestamp","timer","setInterval","clearInterval","useCurrentTime","startTime","setStartTime","updateStartTime","useStartTime","firstStakeTime","setFirstStakeTime","updateFirstStake","useFirstStakeTime","endTime","setEndTime","updateEndTime","__","_endTime","useEndTime","rewardsPerTime","setRewardsPerTime","eq","div","useRewardsPerTime","timeUntilKickoff","setTimeUntilKickoff","gt","useTimeUntilKickoff","elapsedTime","setElapsedTime","lt","useElapsedTime","remainingTime","setRemainingTime","useRemainingTime","totalEmittedRewards","mul","totalUnemittedRewards","totalUnclaimedRewards","myStakeLP","setMyStakeLP","userStakeLp","myStakeFilter","filters","Stake","myWithdrawFilter","Withdraw","useMyStakeLP","isActive","myRewardsPerTime","rewardPerTime","rewardIncrement","setRewardIncrement","all","total","user","useMyRewardsPerTime","myPendingRewards","pendingRewards","setPendingRewards","stake","callStatic","payout","reward","useMyPendingRewards","myClaimedRewards","claimedRewards","setClaimedRewards","userClaimedRewards","addMyClaimedRewards","rewards","myClaimedRewardsFilter","Payout","useMyClaimedRewards","myTotalRewards","myLPBalance","lpContract","balance","setBalance","balanceOf","useMyLPBalance","myLPAllowance","allowance","setAllowance","address","useMyLPAllowance","systemState","state","setState","useSystemState","canStake","setCanStake","useCanStake","canPayout","setCanPayout","useCanPayout","canWithdraw","setCanWithdraw","useCanWithdraw","dataContext","myLPBalanceBN","createDataRoot","useData","AccountDisplay","fullStr","strLen","separator","charsToShow","frontChars","ceil","backChars","substr","truncate","className","onClick","Top","src","logo","alt","wallet","Title","liquidityFarmingState","setLiquidityFarmingState","badgeColor","setBadgeColor","target","rel","href","Header","Tooltip","content","question","ValueItem","bigValue","bold","icon","tooltipText","Row","Container","currentTimeTooltip","Blocks","SectionContainer","topBorder","GlobalStats","useTransaction","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","txResponse","info","autoClose","closeOnClick","draggable","wait","txReceipt","dismiss","status","success","Button","disabled","rest","StakeForm","setLP","lpBig","setLPBig","buttonText","setButtonText","callData","setCallData","buttonEnabled","setButtonEnabled","parseUnits","toFixed","approve","pow","Input","currency","setValue","inputDisable","type","step","slice","makeStep","required","id","onChange","e","normalizedValue","inputValue","min","calculateValue","max","placeholder","onSubmit","preventDefault","lpIcon","lock","Claim","payoutEnabled","setPayoutEnabled","Unlock","withdrawEnabled","setWithdrawEnabled","withdraw","unlock","Body","Footer","packageJson","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","closeButton","document","getElementById"],"mappings":"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","file":"static/js/main.eb23c95a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)] : []\n  return [...dev, parseInt(process.env.REACT_APP_CHAINID, 10)]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)) {\n      setAddresses({\n        liquidityFarming: process.env.REACT_APP_LOCAL_LIQUIDITY_FARMING_ADDRESS\n      })\n    } else {\n      setAddresses({\n        liquidityFarming: process.env.REACT_APP_LIQUIDITY_FARMING_ADDRESS\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n} ","import { useEffect, useState } from 'react'\nimport { ethers, getDefaultProvider } from 'ethers'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { supportedChains } from './chains'\nimport { useListeners } from './useListeners'\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: process.env.REACT_APP_INFURA_API_KEY,\n    },\n  },\n}\n\nconst web3Modal = new Web3Modal({\n  providerOptions,\n  cacheProvider: true,\n  theme: 'dark'\n})\n\nconst defaultName = 'not connected'\nconst defaultWeb3 = {\n  name: defaultName,\n  account: false,\n  chainId: null,\n  provider: null,\n  signerOrProvider: null,\n}\n\nfunction makeInjectedProvider(web3Provider) {\n  return {\n    name: 'injected provider',\n    account: web3Provider.provider.selectedAddress,\n    chainId: parseInt(web3Provider.provider.chainId),\n    provider: web3Provider,\n    signerOrProvider: web3Provider.getSigner(),\n  }\n}\n\nfunction getInjectedProvider(web3Modal) {\n  return new Promise((resolve, reject) => {\n    web3Modal.connect().then(userSuppliedProvider => {\n      const web3Provider = new ethers.providers.Web3Provider(userSuppliedProvider)\n      resolve(makeInjectedProvider(web3Provider))\n    }).catch(reject)\n  })\n}\n\nfunction getLocalProvider() {\n  const localProvider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL)\n  return new Promise((resolve, reject) => {\n    localProvider.detectNetwork().then(network => {\n      resolve({\n        name: 'local provider',\n        account: false,\n        chainId: network.chainId,\n        provider: localProvider,\n        signerOrProvider: localProvider,\n      })\n    }).catch(reject)\n  })\n}\n\nfunction getFallbackProvider() {\n  const providerKeys = {}\n  if (process.env.REACT_APP_INFURA_API_KEY) providerKeys.infura = process.env.REACT_APP_INFURA_API_KEY\n  if (process.env.REACT_APP_ALCHEMY_API_KEY) providerKeys.alchemy = process.env.REACT_APP_ALCHEMY_API_KEY\n  if (process.env.REACT_APP_ETHERSCAN_API_KEY) providerKeys.etherscan = process.env.REACT_APP_ETHERSCAN_API_KEY\n\n  const defaultProvider = getDefaultProvider(parseInt(process.env.REACT_APP_CHAINID, 10), providerKeys)\n\n  return {\n    name: 'fallback provider',\n    account: false,\n    chainId: defaultProvider.network.chainId,\n    provider: defaultProvider,\n    signerOrProvider: defaultProvider,\n  }\n}\n\nfunction useProvider() {\n  const [web3Provider, setWeb3Provider] = useState(defaultWeb3)\n\n  const reloadedProvider = useListeners(web3Provider.provider?.provider, web3Modal)\n  useEffect(() => {\n    if (!reloadedProvider) {\n      setWeb3Provider(defaultWeb3)\n    } else {\n      setWeb3Provider(makeInjectedProvider(reloadedProvider))\n    }\n  }, [reloadedProvider])\n\n  useEffect(() => {\n    if (web3Provider.name !== defaultName) return\n\n    if (web3Modal.cachedProvider || (web3Provider.signerOrProvider && supportedChains().includes(parseInt(web3Provider.signerOrProvider.chainId)))) {\n      getInjectedProvider(web3Modal)\n        .then(setWeb3Provider)\n        .catch(console.error)\n    } else if (process.env.NODE_ENV === 'development') {\n      getLocalProvider()\n        .then(setWeb3Provider)\n        .catch(() => setWeb3Provider(getFallbackProvider()))\n    } else {\n      setWeb3Provider(getFallbackProvider())\n    }\n  }, [web3Provider.name, web3Provider.signerOrProvider])\n\n  return web3Provider\n}\n\nasync function connect() {\n  await web3Modal.connect()\n}\n\nexport { useProvider, connect }","import { createContext, useContext } from 'react'\nimport { useProvider } from './useProvider.js'\n\nlet context\n\nfunction createWeb3Root() {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return function ({ children }) {\n    const web3Provider = useProvider()\n\n    return (\n      <Provider value={web3Provider}>\n        {children}\n      </Provider>\n    )\n  }\n}\n\nconst Web3Provider = createWeb3Root()\n\nfunction useWeb3() {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { toast } from 'react-toastify'\nimport { supportedChains } from './chains'\n\nfunction useListeners(provider, web3Modal) {\n  const [myProvider, setMyProvider] = useState(null)\n\n  useEffect(() => {\n    // subscribe to connect events\n    web3Modal.on('connect', provider => {\n      if (!supportedChains().includes(parseInt(provider.chainId))) {\n        toast.dark('Switch to a supported network', { toastId: 'switchNetwork' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        const web3Provider = new ethers.providers.Web3Provider(provider)\n        setMyProvider(web3Provider)\n        toast.dark('Connected', { toastId: 'connected' })\n      }\n    })\n\n    return () => {\n      web3Modal.off('connect')\n    }\n  }, [web3Modal])\n\n  useEffect(() => {\n    if (!provider) return\n\n    // subscribe to Network events\n    provider.on('chainChanged', chainId => {\n      if (!supportedChains().includes(parseInt(chainId))) {\n        toast.dark('Switch to a supported network', { toastId: 'switchNetwork' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        window.location.reload()\n      }\n    })\n\n    // subscribe to account change events\n    provider.on('accountsChanged', accounts => {\n      if (accounts.length === 0) {\n        toast.dark('Account disconnected', { toastId: 'disconnected' })\n        web3Modal.clearCachedProvider()\n        setMyProvider(null)\n      } else {\n        toast('Account changed', { toastId: 'connected' })\n        setMyProvider(null)\n      }\n    })\n\n    // subscribe to provider disconnection\n    provider.on('disconnect', () => {\n      toast.dark('Account disconnected', { toastId: 'disconnected' })\n      web3Modal.clearCachedProvider()\n      setMyProvider(null)\n    })\n\n    // unsubscribe\n    return () => {\n      provider.removeAllListeners()\n    }\n  }, [provider, web3Modal])\n\n  return myProvider\n}\n\nexport { useListeners }","import { createContext, useContext, useState, useEffect } from 'react'\nimport { utils } from 'ethers'\nimport numeral from 'numeral'\nimport {\n  useLiquidityFarmingContract,\n  useLPTokenContract,\n  useSarcoContract,\n  useDecimals\n} from './contracts'\nimport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n} from './totalRewards'\nimport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n} from './blocks'\nimport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n} from './myRewards'\nimport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n} from './abilities'\nimport { useTotalStakeLP } from './totalStakes'\nimport { useMyStakeLP } from './myStakes'\nimport { useMyLPAllowance, useMyLPBalance } from './myBalances'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  const makeDecimals = decimals => {\n    return `0,0.[${Array(decimals).fill(0).join(\"\")}]`\n  }\n\n  const makeNumeral = (bigNumber, decimals) => {\n    return numeral(utils.formatUnits(bigNumber, decimals))\n  }\n\n  const moneyString = (bigNumber, decimals) => {\n    const money = makeNumeral(bigNumber, decimals).format(makeDecimals(decimals))\n    if (money === \"NaN\") return \"0\"\n    return money\n  }\n\n  const counterString = seconds => {\n    seconds = Number(seconds)\n    var d = Math.floor(seconds / (3600 * 24))\n    var h = Math.floor(seconds % (3600 * 24) / 3600)\n    var m = Math.floor(seconds % 3600 / 60)\n    var s = Math.floor(seconds % 60)\n\n    var dDisplay = d > 0 ? d + (d === 1 ? \" day, \" : \" days, \") : \"\"\n    var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\"\n    var mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\"\n    var sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\"\n\n    if (!dDisplay && !hDisplay && !mDisplay && !sDisplay) sDisplay = \"0 seconds\"\n\n    return (dDisplay + hDisplay + mDisplay + sDisplay).replace(/,\\s*$/, \"\")\n  }\n\n  const dateString = seconds => {\n    return new Date(seconds * 1000).toLocaleString()\n  }\n\n  const StateEnum = Object.freeze({\n    NotScheduled: 1,\n    Scheduled: 2,\n    Ready: 3,\n    Active: 4,\n    Over: 5,\n  })\n\n  const useSystemState = (startTime, timeUntilKickoff, firstStakeTime, remainingTime) => {\n    const [state, setState] = useState(StateEnum.NotScheduled)\n\n    useEffect(() => {\n      if (startTime.eq(0)) {\n        setState(StateEnum.NotScheduled)\n      } else if (timeUntilKickoff.gt(0)) {\n        setState(StateEnum.Scheduled)\n      } else if (firstStakeTime.eq(0)) {\n        setState(StateEnum.Ready)\n      } else if (remainingTime.gt(0)) {\n        setState(StateEnum.Active)\n      } else {\n        setState(StateEnum.Over)\n      }\n    }, [startTime, timeUntilKickoff, firstStakeTime, remainingTime])\n\n    return state\n  }\n\n  return ({ children }) => {\n    const liquidityFarming = useLiquidityFarmingContract()\n\n    const sarcoContract = useSarcoContract(liquidityFarming)\n    const lpTokenContract = useLPTokenContract(liquidityFarming)\n\n    const decimalsSarco = useDecimals(sarcoContract)\n    const decimalsLP = useDecimals(lpTokenContract)\n\n    const totalRewards = useTotalRewards(liquidityFarming)\n    const totalClaimedRewards = useTotalClaimedRewards(liquidityFarming)\n\n    const totalStakeLP= useTotalStakeLP(liquidityFarming)\n\n    const currentBlock = useCurrentBlock()\n    const currentTime = useCurrentTime(currentBlock)\n    const startTime = useStartTime(liquidityFarming)\n    const firstStakeTime = useFirstStakeTime(liquidityFarming)\n    const endTime = useEndTime(liquidityFarming)\n    const rewardsPerTime = useRewardsPerTime(totalRewards, startTime, firstStakeTime, endTime)\n\n    const timeUntilKickoff = useTimeUntilKickoff(currentTime, startTime)\n\n    const elapsedTime = useElapsedTime(currentTime, firstStakeTime, endTime)\n    const remainingTime = useRemainingTime(firstStakeTime, elapsedTime, endTime)\n    const totalEmittedRewards = elapsedTime.mul(rewardsPerTime)\n    const totalUnemittedRewards = remainingTime.mul(rewardsPerTime)\n    const totalUnclaimedRewards = totalEmittedRewards.sub(totalClaimedRewards)\n\n    const myStakeLP = useMyStakeLP(liquidityFarming)\n\n    const isActive = startTime.gt(0) && timeUntilKickoff.eq(0) && firstStakeTime.gt(0) && remainingTime.gt(0) && myStakeLP.gt(0)\n    const myRewardsPerTime = useMyRewardsPerTime(liquidityFarming, currentBlock, rewardsPerTime, isActive)\n    const myPendingRewards = useMyPendingRewards(liquidityFarming, currentBlock, currentTime, myRewardsPerTime, isActive)\n    const myClaimedRewards = useMyClaimedRewards(liquidityFarming)\n\n    const myTotalRewards = myPendingRewards.add(myClaimedRewards)\n\n    const myLPBalance = useMyLPBalance(lpTokenContract, currentBlock)\n\n    const myLPAllowance = useMyLPAllowance(liquidityFarming, lpTokenContract, currentBlock)\n\n    const systemState = useSystemState(startTime, timeUntilKickoff, firstStakeTime, remainingTime)\n\n    const canStake = useCanStake(systemState, StateEnum)\n    const canPayout = useCanPayout(myPendingRewards)\n    const canWithdraw = useCanWithdraw(myStakeLP)\n\n    const dataContext = {\n      liquidityFarming, lpTokenContract, sarcoContract,\n      decimalsLP,\n      totalRewards: moneyString(totalRewards, decimalsSarco),\n      totalClaimedRewards: moneyString(totalClaimedRewards, decimalsSarco),\n      rewardsPerTime: moneyString(rewardsPerTime, decimalsSarco),\n      totalEmittedRewards: moneyString(totalEmittedRewards, decimalsSarco),\n      totalUnemittedRewards: moneyString(totalUnemittedRewards, decimalsSarco),\n      totalUnclaimedRewards: moneyString(totalUnclaimedRewards, decimalsSarco),\n      totalStakeLP: moneyString(totalStakeLP, decimalsLP),\n      currentTime: dateString(currentTime),\n      startTime: dateString(startTime),\n      firstStakeTime: dateString(firstStakeTime),\n      endTime: dateString(endTime),\n      timeUntilKickoff: counterString(timeUntilKickoff),\n      remainingTime: counterString(remainingTime),\n      myStakeLP: moneyString(myStakeLP, decimalsLP),\n      myPendingRewards: moneyString(myPendingRewards, decimalsSarco),\n      myClaimedRewards: moneyString(myClaimedRewards, decimalsSarco),\n      myTotalRewards: moneyString(myTotalRewards, decimalsSarco),\n      myRewardsPerTime: moneyString(myRewardsPerTime, decimalsSarco),\n      myLPBalance: moneyString(myLPBalance, decimalsLP),\n      myLPBalanceBN: myLPBalance,\n      myLPAllowance,\n      canStake,\n      canPayout,\n      canWithdraw,\n      systemState, StateEnum\n    }\n\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useState, useEffect } from 'react'\nimport { Contract } from 'ethers'\nimport { useWeb3 } from '../web3'\nimport { useAddresses } from '../web3/chains'\nimport LiquidityFarming from '../../build-contracts/LiquidityFarming.json'\nimport ERC20 from '../../build-contracts/ERC20.json'\n\nconst useLiquidityFarmingContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [liquidityFarmingContract, setLiquidityFarmingContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n\n    setLiquidityFarmingContract(new Contract(addresses.liquidityFarming, LiquidityFarming.abi, signerOrProvider))\n  }, [chainId, signerOrProvider, addresses])\n\n  return liquidityFarmingContract\n}\n\nconst useLPTokenContract = (liquidityFarming) => {\n  const { signerOrProvider } = useWeb3()\n  const [ lpToken, setLPToken ] = useState()\n\n  useEffect(() => {\n    if (!liquidityFarming || !signerOrProvider) return\n\n    liquidityFarming.lp().then(lp => {\n      setLPToken(new Contract(lp, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityFarming, signerOrProvider])\n\n  return lpToken\n}\n\nconst useSarcoContract = (liquidityFarming) => {\n  const { signerOrProvider } = useWeb3()\n  const [ sarcoContract, setSarcoContract ] = useState()\n\n  useEffect(() => {\n    if (!liquidityFarming || !signerOrProvider) return\n\n    liquidityFarming.sarco().then(sarco => {\n      setSarcoContract(new Contract(sarco, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityFarming, signerOrProvider])\n\n  return sarcoContract\n}\n\nconst useDecimals = (contract) => {\n  const [ decimals, setDecimals ] = useState(0)\n\n  useEffect(() => {\n    if (!contract) return\n\n    contract.decimals().then(decimals => {\n      setDecimals(decimals)\n    }).catch(console.error)\n  }, [contract])\n\n  return decimals\n}\n\nexport {\n  useLiquidityFarmingContract,\n  useLPTokenContract,\n  useSarcoContract,\n  useDecimals\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalRewards = (liquidityFarming) => {\n  const [totalSarcoRewards, setTotalSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    liquidityFarming.totalRewards().then(sarco => {\n      setTotalSarcoRewards(sarco)\n    }).catch(console.error)\n\n    const updateTotalRewards = (totalRewards) => {\n      setTotalSarcoRewards(totalRewards)\n    }\n\n    liquidityFarming.on('Deposit', updateTotalRewards)\n\n    return () => {\n      liquidityFarming.removeListener('Deposit', updateTotalRewards)\n    }\n\n  }, [liquidityFarming])\n\n  return totalSarcoRewards\n}\n\nconst useTotalClaimedRewards = (liquidityFarming) => {\n  const [totalClaimedSarcoRewards, setTotalClaimedSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    liquidityFarming.totalClaimedRewards().then(sarco => {\n        setTotalClaimedSarcoRewards(sarco)\n      }).catch(console.error)\n\n    const getClaimedRewards = (_, _sarco) => {\n      setTotalClaimedSarcoRewards(sarco => sarco.add(_sarco))\n    }\n\n    liquidityFarming.on('Payout', getClaimedRewards)\n\n    return () => {\n      liquidityFarming.removeListener('Payout', getClaimedRewards)\n    }\n  }, [liquidityFarming])\n\n  return totalClaimedSarcoRewards\n}\n\nconst useRewardsPerTime = (totalRewards, startTime, firstStakeTime, endTime) => {\n  const [rewardsPerTime, setRewardsPerTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (startTime.eq(0)) {\n      setRewardsPerTime(BigNumber.from(0))\n      return\n    }\n\n    if (firstStakeTime.eq(0)) {\n      setRewardsPerTime(totalRewards.div(endTime.sub(startTime)))\n      return\n    }\n\n    setRewardsPerTime(totalRewards.div(endTime.sub(firstStakeTime)))\n  }, [totalRewards, startTime, firstStakeTime, endTime])\n\n  return rewardsPerTime\n}\n\nexport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalStakeLP = (liquidityFarming) => {\n  const [totalStakeLP, setTotalStakeLP] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    liquidityFarming.totalStakeLp().then(lp => {\n      setTotalStakeLP(lp)\n    }).catch(console.error)\n\n    const addLP = (_, lp) => {\n      setTotalStakeLP(_lp => _lp.add(lp))\n    }\n\n    const removeLP = (_, lp) => {\n      setTotalStakeLP(_lp => _lp.sub(lp))\n    }\n\n    liquidityFarming.on('Stake', addLP)\n    liquidityFarming.on('Withdraw', removeLP)\n\n    return () => {\n      liquidityFarming.removeListener('Stake', addLP)\n      liquidityFarming.removeListener('Withdraw', removeLP)\n    }\n  }, [liquidityFarming])\n\n  return totalStakeLP\n}\n\n\nexport {\n  useTotalStakeLP\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useCurrentBlock = () => {\n  const [currentBlock, setCurrentBlock] = useState(0)\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlockNumber().then(blockNumber => {\n      setCurrentBlock(blockNumber)\n    }).catch(console.error)\n\n    const getBlockNumber = blockNumber => {\n      setCurrentBlock(blockNumber)\n    }\n\n    provider.on('block', getBlockNumber)\n\n    return () => {\n      provider.removeListener('block', getBlockNumber)\n    }\n  }, [provider])\n\n  return currentBlock\n}\n\nconst useCurrentTime = (blockNumber) => {\n  const [currentTime, setCurrentTime] = useState(BigNumber.from(Math.floor(Date.now() / 1000)))\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlock(blockNumber).then(block => {\n      if (blockNumber > 0) {\n        setCurrentTime(BigNumber.from(block.timestamp))\n      }\n    }).catch(console.error)\n\n    const timer = setInterval(() => {\n      setCurrentTime(currentTime => currentTime.add(BigNumber.from(1)))\n    }, 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [provider, blockNumber])\n\n  return currentTime\n}\n\nconst useStartTime = (liquidityFarming) => {\n  const [startTime, setStartTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    liquidityFarming.startTime().then(startTime => {\n      setStartTime(startTime)\n    }).catch(console.error)\n\n    const updateStartTime = (_, startTime) => {\n      setStartTime(startTime)\n    }\n\n    liquidityFarming.on('Deposit', updateStartTime)\n\n    return () => {\n      liquidityFarming.removeListener('Deposit', updateStartTime)\n    }\n\n  }, [liquidityFarming])\n\n  return startTime\n}\n\nconst useFirstStakeTime = (liquidityFarming) => {\n  const [firstStakeTime, setFirstStakeTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    const updateFirstStake = () => {\n      liquidityFarming.firstStakeTime().then(firstStakeTime => {\n        setFirstStakeTime(firstStakeTime)\n      }).catch(console.error)\n    }\n\n    updateFirstStake()\n\n    liquidityFarming.on('Stake', updateFirstStake)\n\n    return () => {\n      liquidityFarming.removeListener('Stake', updateFirstStake)\n    }\n\n  }, [liquidityFarming])\n\n  return firstStakeTime\n}\n\nconst useEndTime = (liquidityFarming) => {\n  const [endTime, setEndTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityFarming) return\n\n    liquidityFarming.endTime().then(endTime => {\n      setEndTime(endTime)\n    }).catch(console.error)\n\n    const updateEndTime = (_, __, _endTime) => {\n      setEndTime(_endTime)\n    }\n\n    liquidityFarming.on('Deposit', updateEndTime)\n\n    return () => {\n      liquidityFarming.removeListener('Deposit', updateEndTime)\n    }\n  }, [liquidityFarming])\n\n  return endTime\n}\n\nconst useElapsedTime = (currentTime, firstStakeTime, endTime) => {\n  const [elapsedTime, setElapsedTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setElapsedTime(BigNumber.from(0))\n      return\n    }\n\n    if (endTime.lt(currentTime)) {\n      setElapsedTime(endTime.sub(firstStakeTime))\n      return\n    }\n\n    setElapsedTime(currentTime.sub(firstStakeTime))\n  }, [currentTime, firstStakeTime, endTime])\n\n  return elapsedTime\n}\n\nconst useRemainingTime = (firstStakeTime, elapsedTime, endTime) => {\n  const [remainingTime, setRemainingTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setRemainingTime(BigNumber.from(0))\n      return\n    }\n\n    setRemainingTime(endTime.sub(firstStakeTime.add(elapsedTime)))\n  }, [firstStakeTime, elapsedTime, endTime])\n\n  return remainingTime\n}\n\nconst useTimeUntilKickoff = (currentTime, startTime) => {\n  const [timeUntilKickoff, setTimeUntilKickoff] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (currentTime.gt(startTime)) {\n      setTimeUntilKickoff(BigNumber.from(0))\n      return\n    }\n\n    setTimeUntilKickoff(startTime.sub(currentTime))\n  }, [currentTime, startTime])\n\n  return timeUntilKickoff\n}\n\nexport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyStakeLP = (liquidityFarming) => {\n  const [myStakeLP, setMyStakeLP] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityFarming || !account) return\n\n    liquidityFarming.userStakeLp(account).then(lp => {\n      setMyStakeLP(lp)\n    }).catch(console.error)\n\n    const addLP = (_, lp) => {\n      setMyStakeLP(_lp => _lp.add(lp))\n    }\n\n    const removeLP = (_, lp) => {\n      setMyStakeLP(_lp => _lp.sub(lp))\n    }\n\n    const myStakeFilter = liquidityFarming.filters.Stake(account, null)\n    liquidityFarming.on(myStakeFilter, addLP)\n\n    const myWithdrawFilter = liquidityFarming.filters.Withdraw(account, null, null)\n    liquidityFarming.on(myWithdrawFilter, removeLP)\n\n    return () => {\n      liquidityFarming.removeListener(myStakeFilter, addLP)\n      liquidityFarming.removeListener(myWithdrawFilter, removeLP)\n    }\n  }, [liquidityFarming, account])\n\n  return myStakeLP\n}\n\nexport {\n  useMyStakeLP\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyPendingRewards = (liquidityFarming, currentBlock, currentTime, rewardIncrement, isActive) => {\n  const [pendingRewards, setPendingRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (isActive) {\n      setPendingRewards(pendingRewards => pendingRewards.add(rewardIncrement))\n    }\n  }, [currentTime, rewardIncrement, isActive])\n\n  useEffect(() => {\n    if (!liquidityFarming || !account) return\n\n    liquidityFarming.userStakeLp(account).then(stake => {\n      if (stake.gt(0)) {\n        liquidityFarming.callStatic.payout(account).then(reward => {\n          setPendingRewards(reward)\n        }).catch(console.error)\n      } else {\n        setPendingRewards(BigNumber.from(0))\n      }\n    }).catch(console.error)\n    \n  }, [liquidityFarming, currentBlock, account])\n\n  return pendingRewards\n}\n\nconst useMyClaimedRewards = (liquidityFarming) => {\n  const [claimedRewards, setClaimedRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityFarming || !account) return\n\n    liquidityFarming.userClaimedRewards(account).then(reward => {\n      setClaimedRewards(reward)\n    }).catch(console.error)\n\n    const addMyClaimedRewards = (_, reward) => {\n      setClaimedRewards(rewards => rewards.add(reward))\n    }\n\n    const myClaimedRewardsFilter = liquidityFarming.filters.Payout(account, null, null)\n    liquidityFarming.on(myClaimedRewardsFilter, addMyClaimedRewards)\n\n    return () => {\n      liquidityFarming.removeListener(myClaimedRewardsFilter, addMyClaimedRewards)\n    }\n  }, [liquidityFarming, account])\n\n  return claimedRewards\n}\n\nconst useMyRewardsPerTime = (liquidityFarming, currentBlock, rewardPerTime, isActive) => {\n  const [rewardIncrement, setRewardIncrement] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityFarming || !account) return\n\n    if (!isActive) {\n      setRewardIncrement(BigNumber.from(0))\n      return\n    }\n\n    Promise.all([liquidityFarming.totalStakeLp(), liquidityFarming.userStakeLp(account)])\n      .then(([total, user]) => {\n        if (total.eq(0)) {\n          setRewardIncrement(BigNumber.from(0))\n        } else {\n          setRewardIncrement(rewardPerTime.mul(user).div(total))\n        }\n      }).catch(console.error)\n  }, [liquidityFarming, account, currentBlock, rewardPerTime, isActive])\n\n  return rewardIncrement\n}\n\nexport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyLPBalance = (lpContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !lpContract) return\n\n    lpContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, lpContract, currentBlock])\n\n  return balance\n}\n\nconst useMyLPAllowance = (liquidityFarming, lpContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityFarming || !lpContract) return\n\n    lpContract.allowance(account, liquidityFarming.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityFarming, lpContract, currentBlock])\n\n  return allowance\n}\n\nexport {\n  useMyLPBalance,\n  useMyLPAllowance,\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3 } from '../web3'\n\nconst useCanStake = (systemState, StateEnum) => {\n  const { account } = useWeb3()\n  const [canStake, setCanStake] = useState(false)\n\n  useEffect(() => {\n    setCanStake(account && [StateEnum.Ready, StateEnum.Active].includes(systemState))\n  }, [account, systemState, StateEnum])\n\n  return canStake\n}\n\nconst useCanPayout = (pendingRewards) => {\n  const { account } = useWeb3()\n  const [canPayout, setCanPayout] = useState(false)\n\n  useEffect(() => {\n    setCanPayout(account && pendingRewards.gt(0))\n  }, [account, pendingRewards])\n\n  return canPayout\n}\n\nconst useCanWithdraw = (lp) => {\n  const { account } = useWeb3()\n  const [canWithdraw, setCanWithdraw] = useState(false)\n\n  useEffect(() => {\n    setCanWithdraw(account && lp.gt(0))\n  }, [ account, lp ])\n\n  return canWithdraw\n}\n\nexport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n}\n","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { useWeb3 } from '../web3'\nimport logo from '../assets/images/logo.png'\nimport wallet from '../assets/images/wallet.svg'\nimport { connect } from '../web3/useProvider'\n\nconst AccountDisplay = () => {\n  const truncate = (fullStr, strLen, separator) => {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    const sepLen = separator.length\n    const charsToShow = strLen - sepLen\n    const frontChars = Math.ceil(charsToShow / 2 + 1) // accounts for the \"0x\"\n    const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n  }\n\n  const { account } = useWeb3()\n\n  if (account) {\n    return (\n      <div>\n        {truncate(account, 25)}\n      </div>\n    )\n  } else {\n    return (\n      <button className=\"underline\" onClick={() => connect()}>\n        Connect Web3 Account\n      </button>\n    )\n  }\n}\n\nconst Top = () => {\n  return (\n    <div className=\"flex justify-between mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"flex items-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" />\n        </div>\n        <div className=\"ml-3 text-gray-400 text-sm\">\n          <AccountDisplay />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Title = () => {\n  const { systemState, StateEnum, liquidityFarming } = useData()\n\n  const [liquidityFarmingState, setLiquidityFarmingState] = useState(\"Not Scheduled\")\n  const [badgeColor, setBadgeColor] = useState(\"bg-red\")\n\n  useEffect(() => {\n    if (systemState === StateEnum.NotScheduled) {\n      setLiquidityFarmingState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    } else if (systemState === StateEnum.Scheduled) {\n      setLiquidityFarmingState(\"Scheduled\")\n      setBadgeColor(\"bg-yellow\")\n    } else if (systemState === StateEnum.Ready) {\n      setLiquidityFarmingState(\"Ready\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Active) {\n      setLiquidityFarmingState(\"Active\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Over) {\n      setLiquidityFarmingState(\"Over\")\n      setBadgeColor(\"bg-red\")\n    } else {\n      setLiquidityFarmingState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    }\n  }, [systemState, StateEnum])\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"flex justify-center items-center\">\n        <h1 className=\"text-xl\">\n          Liquidity Farming\n        </h1>\n        <div className={`ml-3 py-1 px-2 ${badgeColor} text-gray-900 text-xs rounded`}>\n          {liquidityFarmingState}\n        </div>\n      </div>\n      <div className=\"mt-2 text-gray-400 text-sm underline\">\n        <a target=\"_blank\" rel=\"noreferrer\" href={`https://etherscan.io/address/${liquidityFarming?.address}`}>View on Etherscan</a>\n      </div>\n    </div>\n  )\n}\n\nconst Header = () => {\n  return (\n    <div className=\"pt-2 pb-6\">\n      <Top />\n      <Title />\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/question.6cbe55dd.svg\";","import Tippy from '@tippyjs/react'\nimport question from '../../assets/images/question.svg'\n\nconst Tooltip = ({ children }) => {\n  return (\n  <Tippy content={children} className=\"border-2 border-white rounded text-center text-xs font-normal p-2 bg-gray-900\">\n    <img src={question} alt=\"tooltip\" />\n  </Tippy>\n  )\n}\n\nexport default Tooltip\n","import Tooltip from './Tooltip'\n\nconst ValueItem = ({ children, value, bigValue = false, bold = false, icon, tooltipText }) => {\n  return (\n    <div className=\"mx-4 mb-6 text-sm w-64\">\n      <div className={`${bold ? \"text-white font-bold\" : \"text-gray-400 font-normal\"} mb-2`}>\n        {tooltipText\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">{children}</div>\n              <Tooltip>{tooltipText}</Tooltip>\n            </div>\n          : children}\n      </div>\n      <div className={`${bigValue ? \"text-lg\" : \"text-sm\"} ${bold ? \"font-bold\" : \"font-normal\"}`}>\n        {icon\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">\n                <img src={icon} alt=\"icon\" />\n              </div>\n              <div>{value}</div>\n            </div>\n          : value\n        }\n      </div>\n    </div>\n  )\n}\n\nconst Row = ({ children, value, total }) => {\n  return (\n    <div className=\"flex mb-1 items-center\">\n      <div className=\"w-1/2 text-left text-gray-400 whitespace-nowrap\">\n        {children}\n      </div>\n      <div className={`w-1/2 ml-2 text-right truncate ${total ? \"font-bold\": \"\"}`}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nexport { ValueItem, Row }\n","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-wrap justify-center text-center border-b border-t pt-6 mb-6 border-gray-500\">\n      {children}\n    </div>\n  )\n}\n\nconst currentTimeTooltip = \"\\\"Current Time\\\" comes from the timestamp of the most recent Ethereum block. That's why it slightly jumps around, and probably doesn't directly match your system clock.\"\n\nconst NotScheduled = () => {\n  const { currentTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n    </Container>\n  )\n}\n\nconst Scheduled = () => {\n  const { currentTime, startTime, timeUntilKickoff } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={startTime}>Start Time</ValueItem>\n      <ValueItem value={timeUntilKickoff}>Time Until Kickoff</ValueItem>\n    </Container>\n  )\n}\n\nconst Ready = () => {\n  const { currentTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Active = () => {\n  const { currentTime, firstStakeTime, endTime, remainingTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={remainingTime}>Remaining Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Over = () => {\n  const { currentTime, firstStakeTime, endTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={currentTime} tooltipText={currentTimeTooltip}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Blocks = () => {\n  const { systemState, StateEnum } = useData()\n\n  if (systemState === StateEnum.NotScheduled) {\n    return <NotScheduled />\n  } else if (systemState === StateEnum.Scheduled) {\n    return <Scheduled />\n  } else if (systemState === StateEnum.Ready) {\n    return <Ready />\n  } else if (systemState === StateEnum.Active) {\n    return <Active />\n  } else if (systemState === StateEnum.Over) {\n    return <Over />\n  } else {\n    return <></>\n  }\n}\n\nexport default Blocks\n","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-col text-center\">\n      {children}\n    </div>\n  )\n}\n\nconst SectionContainer = ({ children, topBorder = false }) => {\n  return (\n    <div className={`flex flex-col sm:flex-row flex-wrap items-center justify-center ${topBorder ? \"pt-6 sm:pt-0 border-t border-gray-500 sm:border-none\" : \"border-none\"}`}>\n      {children}\n    </div>\n  )\n}\n\nconst GlobalStats = () => {\n  const {\n    totalEmittedRewards,\n    totalUnemittedRewards,\n    totalClaimedRewards,\n    totalUnclaimedRewards,\n    totalRewards,\n    totalStakeLP,\n  } = useData()\n\n  return (\n    <Container>\n      <SectionContainer>\n        <ValueItem bigValue value={totalEmittedRewards}>Emitted SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnemittedRewards}>Unemitted SARCO</ValueItem>\n        <ValueItem bigValue bold value={totalRewards}\n          tooltipText=\"&quot;Total SARCO&quot; is the sum of Emitted SARCO and Unemitted SARCO, which shows the total number of SARCO that liquidity farming will produce\"\n        >Total SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue value={totalClaimedRewards}\n          tooltipText=\"&quot;Total Claimed SARCO&quot; is the sum of all SARCO which have been claimed (via transactions to own wallets) from liquidity farming, by all participants\"\n        >Total Claimed SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnclaimedRewards}\n          tooltipText=\"&quot;Total Unclaimed SARCO&quot; is calculated as as &quot;Emitted SARCO&quot; minus &quot;Total Claimed SARCO&quot;\"\n        >Total Unclaimed SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue value={totalStakeLP}>Total Locked LP</ValueItem>\n      </SectionContainer>\n    </Container>\n  )\n}\n\nexport default GlobalStats\n","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }\n","export default __webpack_public_path__ + \"static/media/usdc.cad2e94f.svg\";","export default __webpack_public_path__ + \"static/media/lock.0df973d1.svg\";","import { useState, useEffect, useCallback } from 'react'\nimport { BigNumber, utils } from 'ethers'\nimport numeral from 'numeral'\nimport { useData } from '../dataContext'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\nimport lpIcon from '../assets/images/usdc.svg'\nimport lock from '../assets/images/lock.svg'\n\nconst StakeForm = () => {\n  const { account } = useWeb3()\n  const {\n    liquidityFarming,\n    sarcoContract,\n    lpTokenContract,\n    myLPBalance,\n    myLPBalanceBN,\n    myLPAllowance,\n    decimalsLP,\n    canStake,\n  } = useData()\n\n  const [lp, setLP] = useState(0)\n\n  const [lpBig, setLPBig] = useState(BigNumber.from(0))\n\n  const [buttonText, setButtonText] = useState(\"Stake\")\n  const { contractCall, pending } = useTransaction()\n  const [callData, setCallData] = useState([])\n\n  const [buttonEnabled, setButtonEnabled] = useState(false)\n\n  useEffect(() => {\n    setButtonEnabled(!pending && lpBig.gt(0))\n  }, [pending, lpBig])\n\n  useEffect(() => {\n    setLP(0)\n  }, [account])\n\n  useEffect(() => {\n    setLPBig(utils.parseUnits((lp || 0).toFixed(decimalsLP), decimalsLP))\n  }, [lp, decimalsLP])\n\n  useEffect(() => {\n    if(myLPBalanceBN.eq(BigNumber.from(0))) {\n      setButtonText(\"Add Liquidity\")\n    }\n    else if (myLPAllowance.lt(lpBig)) {\n      setButtonText(\"Approve LP\")\n      if (!lpTokenContract) return\n      setCallData([\n        lpTokenContract.approve,\n        [liquidityFarming?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving LP...\", \"LP approval failed!\", \"LP approval made!\"\n      ])\n    } else {\n      setButtonText(\"Lock my LP\")\n      if (!liquidityFarming) return\n      setCallData([\n        liquidityFarming.stake,\n        [lpBig, { }],\n        \"Locking coins...\", \"Lock failed!\", \"Lock made!\",\n        () => {\n          setLP(0)\n        }\n      ])\n    }\n  }, [ lp, lpBig, myLPBalanceBN, myLPAllowance, liquidityFarming, lpTokenContract ])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  const Input = useCallback(({ currency, value, setValue, balance, decimals}) => {\n    const calculateValue = setValue => {\n      return e => {\n        let normalizedValue = \"\"\n        const inputValue = e.target.value\n        if (inputValue) normalizedValue = Math.min(inputValue, numeral(balance).value())\n        setValue(normalizedValue)\n      }\n    }\n\n    const makeStep = decimals => {\n      return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n    }\n\n    const inputDisable = !(canStake && numeral(balance).value() > 0)\n\n    return (\n      <div className=\"flex mb-4 text-sm\">\n        <div className=\"mr-4 flex flex-col items-center w-10\">\n          <div className=\"uppercase mb-2\">{currency}</div>\n        </div>\n        <div className=\"w-full\">\n          <div className=\"flex justify-between mb-2 text-gray-400\">\n            <div className=\"mr-2\">Amount*</div>\n            <div>Balance: {balance}</div>\n          </div>\n          <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"0\" max={balance} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={balance} />\n        </div>\n      </div>\n    )\n  }, [canStake])\n\n  return (\n    <div>\n      <form onSubmit={calls}>\n        <div className=\"mt-2 flex flex-col w-full items-center\">\n          <Input currency=\"lp\" value={lp} setValue={setLP} balance={myLPBalance} decimals={decimalsLP} icon={lpIcon} />\n        </div>\n        <div className=\"mx-6\">\n          {buttonText === \"Add Liquidity\" ? (\n            <a href={`https://app.uniswap.org/#/add/ETH/${sarcoContract?.address}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button type=\"button\">\n                {buttonText}\n              </Button>\n            </a>\n          ) : (\n            <Button type=\"submit\" disabled={!buttonEnabled} icon={lock}>\n              {buttonText}\n            </Button>\n          )}\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default StakeForm\n","import { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { useState, useEffect } from 'react'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\n\nconst Claim = () => {\n  const {\n    myRewardsPerTime,\n    myPendingRewards,\n    myClaimedRewards,\n    myTotalRewards,\n  } = useData()\n\n  const { account } = useWeb3()\n  const { liquidityFarming, canPayout } = useData()\n\n  const { contractCall, pending } = useTransaction()\n  const [payoutEnabled, setPayoutEnabled] = useState(false)\n\n  useEffect(() => {\n    setPayoutEnabled(!pending && canPayout)\n  }, [pending, canPayout])\n\n  const payout = () => {\n    contractCall(\n      liquidityFarming.payout, [account, { }],\n      \"Paying out rewards...\", \"Payout failed!\", \"Payout successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mb-4 mx-4\">\n        <div className=\"mb-3\">\n          <Row value={myRewardsPerTime}>SARCO / second</Row>\n        </div>\n        <Row value={myPendingRewards}>SARCO Pending</Row>\n        <Row value={myClaimedRewards}>SARCO Claimed</Row>\n        <Row value={myTotalRewards} total>SARCO Total</Row>\n      </div>\n      <Button disabled={!payoutEnabled} onClick={payout}>\n        Claim my SARCO\n      </Button>\n    </div>\n  )\n}\n\nexport default Claim\n","export default __webpack_public_path__ + \"static/media/unlock.c85dfc87.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { Button } from './shared/Button'\nimport { useWeb3 } from '../web3'\nimport { useTransaction } from '../dataContext/transactions'\nimport unlock from '../assets/images/unlock.svg'\n\nconst Unlock = () => {\n  const { account } = useWeb3()\n  const {\n    myStakeLP,\n    liquidityFarming,\n    canPayout,\n    canWithdraw,\n  } = useData()\n\n  const { contractCall, pending } = useTransaction()\n\n  const [withdrawEnabled, setWithdrawEnabled] = useState(false)\n\n  useEffect(() => {\n    setWithdrawEnabled(!pending && canWithdraw)\n  }, [pending, canPayout, canWithdraw])\n\n  const withdraw = () => {\n    contractCall(\n      liquidityFarming.withdraw, [account, { }],\n      \"Unlocking stablecoins...\", \"Unlock failed!\", \"Unlock successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <Row value={myStakeLP}>LP Locked</Row>\n      </div>\n      <Button disabled={!withdrawEnabled} onClick={withdraw} icon={unlock}>\n        Unlock my LP Tokens\n      </Button>\n    </div>\n  )\n}\n\nexport default Unlock\n","import Blocks from './Blocks'\nimport GlobalStats from './GlobalStats'\nimport StakeForm from './StakeForm'\nimport Claim from './Claim'\nimport Unlock from './Unlock'\n\nconst Body = () => {\n  return (\n    <div>\n      <Blocks />\n      <GlobalStats />\n      <div className=\"border-2 border-gray-500 mb-6 py-8 px-4 gap-12 flex flex-col items-center justify-center\">\n        <div className=\"flex flex-col sm:flex-row sm:items-end gap-8\">\n          <StakeForm />\n          <Unlock />\n        </div>\n        <div className=\"w-full sm:w-1/2 mb-8 sm:mb-12\">\n          <Claim />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Body\n","import { useWeb3 } from '../web3'\nimport packageJson from '../../package.json'\n\nconst Footer = () => {\n  const { name } = useWeb3()\n\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{name}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      <div>\n        <Header />\n        <Body />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ToastContainer } from 'react-toastify'\nimport './index.css'\nimport App from './App'\nimport { Web3Provider } from './web3'\nimport { DataProvider } from './dataContext'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <App />\n        <ToastContainer closeButton={false} />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}